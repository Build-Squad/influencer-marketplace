# Generated by Django 4.2.7 on 2024-02-06 13:23

from django.db import migrations


def create_transactions(apps, schema_editor):
    Transaction = apps.get_model('orders', 'Transaction')
    Order = apps.get_model('orders', 'Order')
    OrderItem = apps.get_model('orders', 'OrderItem')
    User = apps.get_model('accounts', 'User')
    Wallet = apps.get_model('accounts', 'Wallet')

    for order in Order.objects.all():
        if order.influencer_transaction_address:
            transaction_exists = Transaction.objects.filter(
                order=order, transaction_address=order.influencer_transaction_address).exists()
            if not transaction_exists:
                order_items = OrderItem.objects.filter(order_id=order.id)
                for order_item in order_items:
                    user = User.objects.get(
                        id=order_item.package.influencer.id)
                    wallet = Wallet.objects.get(
                        user_id=user.id, is_primary=True)

                    Transaction.objects.create(
                        order=order,
                        transaction_address=order.influencer_transaction_address,
                        transaction_type='claim_escrow',
                        transaction_initiated_by=user,
                        status="success",
                        wallet=wallet,
                    )
        if order.buyer_transaction_address:
            transaction_exists = Transaction.objects.filter(
                order=order, transaction_address=order.buyer_transaction_address).exists()
            if not transaction_exists:
                user = User.objects.get(id=order.buyer.id)
                wallet = Wallet.objects.get(user_id=user.id, is_primary=True)

                Transaction.objects.create(
                    order=order,
                    transaction_address=order.buyer_transaction_address,
                    transaction_type='initiate_escrow',
                    transaction_initiated_by=user,
                    status="success",
                    wallet=wallet,
                )


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0026_auto_20240206_1005'),
    ]

    operations = [
        migrations.RunPython(create_transactions),
    ]
