version: '3'

services:

  redis:
    image: redis:latest
    container_name: redis

  api:
    build:
      context: ./src/api/marketplace
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./src/api/marketplace
        target: /api/marketplace
        consistency: cached
      - type: volume
        target: /api/marketplace/venv
        consistency: cached
    depends_on:
      - psql
    environment:
      - POSTGRES_NAME=marketplace
      - POSTGRES_USER=mp_dev
      - POSTGRES_PASSWORD=xsdrt1768
      - DJANGO_SETTINGS_MODULE=marketplace.settings
      - PYTHONPATH=/api/marketplace
    container_name: api

  ui:
    build:
      context: ./src/ui
    image: react:latest
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./src/ui
        target: /ui
        consistency: cached
      - type: volume
        target: /ui/node_modules
        consistency: cached
    environment:
      - NODE_OPTIONS="--max-old-space-size=6024"
    command: yarn dev
    depends_on:
      - api
    container_name: ui

  psql:
    image: postgres:latest
    environment:
      - POSTGRES_NAME=marketplace
      - POSTGRES_USER=mp_dev
      - POSTGRES_PASSWORD=xsdrt1768
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: psql

  # Celery worker
  celery-worker:
    restart: always
    build:
      context: ./src/api/marketplace
    volumes:
      - ./src/api:/api
    command: celery -A marketplace worker -l DEBUG
    container_name: celery_worker
    depends_on:
      - redis
      - api
    environment:
      - DJANGO_SETTINGS_MODULE=marketplace.settings
      - PYTHONPATH=/api/marketplace

  # Celery Scheduler
  celery-beat:
    restart: always
    build:
      context: ./src/api/marketplace
    volumes:
      - ./src/api:/api
    command: celery -A marketplace beat -l DEBUG
    container_name: celery_beat
    depends_on:
      - celery-worker